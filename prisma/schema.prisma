// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TournamentType {
  LEAGUE
  CUP
}

model Tournament {
  id      String         @id @default(uuid())
  name    String         @unique
  type    TournamentType
  matches Match[]
  Season  Season[]

  @@map("tournaments")
}

model Season {
  id           String     @id @default(uuid())
  name         String
  tournamentId String
  tournament   Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  Match        Match[]

  @@unique([name, tournamentId])
  @@map("seasons")
}

model Team {
  id         String      @id @default(uuid())
  name       String      @unique
  shortName  String      @db.VarChar(4)
  matchTeams MatchTeam[]

  @@map("teams")
}

model Match {
  id              String      @id @default(uuid())
  season          Season      @relation(fields: [seasonId], references: [id])
  seasonId        String
  kickOff         DateTime?   @db.Timestamp()
  extraTime       Boolean?
  penaltyShootout Boolean?
  matchTeams      MatchTeam[]
  Tournament      Tournament? @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  tournamentId    String?

  @@map("matches")
}

model MatchTeam {
  id          String       @id @default(uuid())
  match       Match        @relation(fields: [matchId], references: [id], onDelete: Cascade)
  matchId     String
  teamId      String
  isHome      Boolean?
  team        Team         @relation(fields: [teamId], references: [id])
  matchEvents MatchEvent[]

  @@unique([matchId, teamId])
  @@map("match-teams")
}

enum MatchEventType {
  GOAL
  YELLOW_CARD
  RED_CARD
  SUBSTITUTION
}

model MatchEvent {
  id               String            @id @default(uuid())
  matchTeamId      String
  matchTeam        MatchTeam         @relation(fields: [matchTeamId], references: [id], onDelete: Cascade)
  type             MatchEventType
  minute           Int               @db.Int
  matchEventActors MatchEventActor[]

  @@map("match-events")
}

enum MatchEventActorType {
  SCORER
  ASSIST
  OG
  CARD_TAKER
  SUB_IN
  SUB_OUT
}

model MatchEventActor {
  id           String              @id @default(uuid())
  matchEvent   MatchEvent          @relation(fields: [matchEventId], references: [id], onDelete: Cascade)
  matchEventId String
  player       String
  type         MatchEventActorType

  @@map("match-event-actors")
}
